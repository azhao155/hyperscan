syntax = "proto3";

package wafservice;

service WafService {
  rpc EvalRequest (stream WafHttpRequest) returns (WafDecision) {}
  rpc PutConfig (WAFConfig) returns (PutConfigResponse) {}
  rpc DisposeConfig (WAFConfigVersion) returns (DisposeConfigResponse) {}
}

message HeaderPair {
   string key = 1;
   string value = 2;
}

message WafHttpRequest {
    oneof content {
        HeadersAndFirstChunk headersAndFirstChunk = 1;
        NextBodyChunk nextBodyChunk = 2;
    }
}

message HeadersAndFirstChunk {
  string remoteAddr = 9;
  string configID = 7;
  string method = 1;
  string uri = 2;
  repeated HeaderPair headers = 3;
  bytes firstBodyChunk = 4;
  bool moreBodyChunks = 5;
}

message NextBodyChunk {
  bytes bodyChunk = 1;
  bool moreBodyChunks = 2;
}


message WafDecision {
  bool allow = 1;
}

message WAFConfig {
  int32 configVersion = 1;
  repeated PolicyConfig policyConfigs = 2;
}

message CustomRule {
  string name = 1;
  int32 priority = 2;
  string ruleType = 3;
  repeated MatchCondition matchConditions = 4;
  string action = 5;
}

message MatchCondition {
  repeated MatchVariable matchVariables = 1;
  string operator = 2;
  bool negateCondition = 3;
  repeated string matchValues = 4;
  repeated string transforms = 5;
}

message MatchVariable {
  string variableName = 1;
  string selector = 2;
}

message PolicyConfig {
  string configID = 1;
  SecRuleConfig secRuleConfig = 2;
  CustomRuleConfig customRuleConfig = 3;
  IPReputationConfig ipReputationConfig = 4;
}

message SecRuleConfig {
  bool enabled = 1;
  string ruleSetId = 2;
}

message CustomRuleConfig {
  repeated CustomRule customRules = 1;
}

message IPReputationConfig {
  bool enabled = 1;
}

message PutConfigResponse {
}

message WAFConfigVersion {
  int32 configVersion = 1;
}

message DisposeConfigResponse {
}
