// Code generated by protoc-gen-go. DO NOT EDIT.
// source: waf.proto

package wafservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HeaderPair struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeaderPair) Reset()         { *m = HeaderPair{} }
func (m *HeaderPair) String() string { return proto.CompactTextString(m) }
func (*HeaderPair) ProtoMessage()    {}
func (*HeaderPair) Descriptor() ([]byte, []int) {
	return fileDescriptor_waf_fec7ee91cd7e381b, []int{0}
}
func (m *HeaderPair) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeaderPair.Unmarshal(m, b)
}
func (m *HeaderPair) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeaderPair.Marshal(b, m, deterministic)
}
func (dst *HeaderPair) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeaderPair.Merge(dst, src)
}
func (m *HeaderPair) XXX_Size() int {
	return xxx_messageInfo_HeaderPair.Size(m)
}
func (m *HeaderPair) XXX_DiscardUnknown() {
	xxx_messageInfo_HeaderPair.DiscardUnknown(m)
}

var xxx_messageInfo_HeaderPair proto.InternalMessageInfo

func (m *HeaderPair) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HeaderPair) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type WafHttpRequest struct {
	Method  string        `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Uri     string        `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Headers []*HeaderPair `protobuf:"bytes,3,rep,name=headers,proto3" json:"headers,omitempty"`
	// TODO Use gRPC streaming instead of a simple string type
	Body                 []byte   `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WafHttpRequest) Reset()         { *m = WafHttpRequest{} }
func (m *WafHttpRequest) String() string { return proto.CompactTextString(m) }
func (*WafHttpRequest) ProtoMessage()    {}
func (*WafHttpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_waf_fec7ee91cd7e381b, []int{1}
}
func (m *WafHttpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WafHttpRequest.Unmarshal(m, b)
}
func (m *WafHttpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WafHttpRequest.Marshal(b, m, deterministic)
}
func (dst *WafHttpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WafHttpRequest.Merge(dst, src)
}
func (m *WafHttpRequest) XXX_Size() int {
	return xxx_messageInfo_WafHttpRequest.Size(m)
}
func (m *WafHttpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WafHttpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WafHttpRequest proto.InternalMessageInfo

func (m *WafHttpRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *WafHttpRequest) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *WafHttpRequest) GetHeaders() []*HeaderPair {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *WafHttpRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type WafDecision struct {
	Allow                bool     `protobuf:"varint,1,opt,name=allow,proto3" json:"allow,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WafDecision) Reset()         { *m = WafDecision{} }
func (m *WafDecision) String() string { return proto.CompactTextString(m) }
func (*WafDecision) ProtoMessage()    {}
func (*WafDecision) Descriptor() ([]byte, []int) {
	return fileDescriptor_waf_fec7ee91cd7e381b, []int{2}
}
func (m *WafDecision) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WafDecision.Unmarshal(m, b)
}
func (m *WafDecision) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WafDecision.Marshal(b, m, deterministic)
}
func (dst *WafDecision) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WafDecision.Merge(dst, src)
}
func (m *WafDecision) XXX_Size() int {
	return xxx_messageInfo_WafDecision.Size(m)
}
func (m *WafDecision) XXX_DiscardUnknown() {
	xxx_messageInfo_WafDecision.DiscardUnknown(m)
}

var xxx_messageInfo_WafDecision proto.InternalMessageInfo

func (m *WafDecision) GetAllow() bool {
	if m != nil {
		return m.Allow
	}
	return false
}

func init() {
	proto.RegisterType((*HeaderPair)(nil), "wafservice.HeaderPair")
	proto.RegisterType((*WafHttpRequest)(nil), "wafservice.WafHttpRequest")
	proto.RegisterType((*WafDecision)(nil), "wafservice.WafDecision")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WafServiceClient is the client API for WafService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WafServiceClient interface {
	EvalRequest(ctx context.Context, in *WafHttpRequest, opts ...grpc.CallOption) (*WafDecision, error)
}

type wafServiceClient struct {
	cc *grpc.ClientConn
}

func NewWafServiceClient(cc *grpc.ClientConn) WafServiceClient {
	return &wafServiceClient{cc}
}

func (c *wafServiceClient) EvalRequest(ctx context.Context, in *WafHttpRequest, opts ...grpc.CallOption) (*WafDecision, error) {
	out := new(WafDecision)
	err := c.cc.Invoke(ctx, "/wafservice.WafService/EvalRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WafServiceServer is the server API for WafService service.
type WafServiceServer interface {
	EvalRequest(context.Context, *WafHttpRequest) (*WafDecision, error)
}

func RegisterWafServiceServer(s *grpc.Server, srv WafServiceServer) {
	s.RegisterService(&_WafService_serviceDesc, srv)
}

func _WafService_EvalRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WafHttpRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WafServiceServer).EvalRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wafservice.WafService/EvalRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WafServiceServer).EvalRequest(ctx, req.(*WafHttpRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WafService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wafservice.WafService",
	HandlerType: (*WafServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "EvalRequest",
			Handler:    _WafService_EvalRequest_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "waf.proto",
}

func init() { proto.RegisterFile("waf.proto", fileDescriptor_waf_fec7ee91cd7e381b) }

var fileDescriptor_waf_fec7ee91cd7e381b = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x31, 0x4f, 0xc3, 0x30,
	0x10, 0x85, 0x09, 0x29, 0x85, 0x5e, 0x10, 0x42, 0x27, 0x54, 0xa2, 0x4e, 0x51, 0x58, 0x32, 0x45,
	0xa8, 0xf0, 0x13, 0x8a, 0xd4, 0x11, 0x99, 0x21, 0xf3, 0xb5, 0x39, 0xab, 0x16, 0x01, 0x17, 0xc7,
	0x49, 0xd4, 0x8d, 0x9f, 0x8e, 0xec, 0x24, 0x0a, 0xb0, 0xbd, 0x67, 0xfb, 0xde, 0xfb, 0x7c, 0xb0,
	0xe8, 0x48, 0xe6, 0x47, 0xa3, 0xad, 0x46, 0xe8, 0x48, 0xd6, 0x6c, 0x5a, 0xb5, 0xe7, 0xf4, 0x19,
	0x60, 0xcb, 0x54, 0xb2, 0x79, 0x25, 0x65, 0xf0, 0x16, 0xc2, 0x77, 0x3e, 0xc5, 0x41, 0x12, 0x64,
	0x0b, 0xe1, 0x24, 0xde, 0xc1, 0x45, 0x4b, 0x55, 0xc3, 0xf1, 0xb9, 0x3f, 0xeb, 0x4d, 0xfa, 0x1d,
	0xc0, 0x4d, 0x41, 0x72, 0x6b, 0xed, 0x51, 0xf0, 0x57, 0xc3, 0xb5, 0xc5, 0x25, 0xcc, 0x3f, 0xd8,
	0x1e, 0x74, 0x39, 0x4c, 0x0f, 0xce, 0x45, 0x36, 0x46, 0x0d, 0xe3, 0x4e, 0xe2, 0x23, 0x5c, 0x1e,
	0x7c, 0x65, 0x1d, 0x87, 0x49, 0x98, 0x45, 0xeb, 0x65, 0x3e, 0x01, 0xe5, 0x13, 0x8d, 0x18, 0x9f,
	0x21, 0xc2, 0x6c, 0xa7, 0xcb, 0x53, 0x3c, 0x4b, 0x82, 0xec, 0x5a, 0x78, 0x9d, 0x3e, 0x40, 0x54,
	0x90, 0xdc, 0xf0, 0x5e, 0xd5, 0x4a, 0x7f, 0x3a, 0x4e, 0xaa, 0x2a, 0xdd, 0xf9, 0xf6, 0x2b, 0xd1,
	0x9b, 0xb5, 0x00, 0x28, 0x48, 0xbe, 0xf5, 0xd1, 0xb8, 0x81, 0xe8, 0xa5, 0xa5, 0x6a, 0x24, 0x5e,
	0xfd, 0xae, 0xfd, 0xfb, 0x9b, 0xd5, 0xfd, 0xbf, 0xbb, 0xb1, 0x27, 0x3d, 0xdb, 0xcd, 0xfd, 0x12,
	0x9f, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xde, 0xbb, 0x7e, 0x85, 0x51, 0x01, 0x00, 0x00,
}
